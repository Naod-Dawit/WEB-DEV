{"ast":null,"code":"var _jsxFileName = \"/home/naex/Desktop/REACT PROJECTS/Quote Generator/src/source.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Getdata() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://zenquotes.io/api/quotes');\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array means this runs only once when the component mounts\n\n  const generateData = () => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://zenquotes.io/api/quotes');\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  };\n  function getonequote() {\n    const randomindex = Math.floor(Math.random() * data.length);\n    const quote = data.q[randomindex];\n    const author = data.a[randomindex];\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data.map((quote, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"- \", quote.a]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateData,\n      children: \"Generate Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Getdata, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Getdata;\nvar _c;\n$RefreshReg$(_c, \"Getdata\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Getdata","_s","data","setData","fetchData","response","get","error","console","generateData","getonequote","randomindex","Math","floor","random","length","quote","q","author","a","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/naex/Desktop/REACT PROJECTS/Quote Generator/src/source.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function Getdata() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://zenquotes.io/api/quotes');\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array means this runs only once when the component mounts\n\n  const generateData = () => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://zenquotes.io/api/quotes');\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  };\n\n  function getonequote(){\n    const randomindex=Math.floor(Math.random()*data.length)\n    const quote=data.q[randomindex]\n    const author=data.a[randomindex]\n  }\n\n  return (\n    <div>\n      {data.map((quote, index) => (\n        <div key={index}>\n          <h1>{quote}</h1>\n          <p>- {quote.a}</p>\n        </div>\n      ))}\n      <button onClick={generateData}>Generate Data</button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iCAAiC,CAAC;QACnEH,OAAO,CAACE,QAAQ,CAACH,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAML,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iCAAiC,CAAC;QACnEH,OAAO,CAACE,QAAQ,CAACH,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC;EAED,SAASM,WAAWA,CAAA,EAAE;IACpB,MAAMC,WAAW,GAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAACZ,IAAI,CAACa,MAAM,CAAC;IACvD,MAAMC,KAAK,GAACd,IAAI,CAACe,CAAC,CAACN,WAAW,CAAC;IAC/B,MAAMO,MAAM,GAAChB,IAAI,CAACiB,CAAC,CAACR,WAAW,CAAC;EAClC;EAEA,oBACEZ,OAAA;IAAAqB,QAAA,GACGlB,IAAI,CAACmB,GAAG,CAAC,CAACL,KAAK,EAAEM,KAAK,kBACrBvB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAKJ;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChB3B,OAAA;QAAAqB,QAAA,GAAG,IAAE,EAACJ,KAAK,CAACG,CAAC;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFVJ,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CACN,CAAC,eACF3B,OAAA;MAAQ4B,OAAO,EAAElB,YAAa;MAAAW,QAAA,EAAC;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAACzB,EAAA,CA9CuBD,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
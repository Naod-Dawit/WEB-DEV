{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Getdata() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://api.adviceslip.com/advice');\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array means this runs only once when the component mounts\n\n  /*  const generateData = () => {\n     const fetchData = async () => {\n       try {\n         const response = await axios.get('https://zenquotes.io/api/quotes');\n         setData(response.data);\n       } catch (error) {\n         console.error(\"Error fetching data:\", error);\n       }\n     };\n      fetchData();\n   };\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  /*    <div className=\"app\">\n         <div className=\"card\">\n             <h1 className=\"heading\">{this.state.advice}</h1>\n             <button className=\"button\" onClick={this.fetchAdvice}>\n                 <span>Give Me Advice</span>\n             </button>\n         </div>\n     </div> */;\n}\n_s(Getdata, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Getdata;\nvar _c;\n$RefreshReg$(_c, \"Getdata\");","map":{"version":3,"names":["React","useState","useEffect","axios","Fragment","_Fragment","jsxDEV","_jsxDEV","Getdata","_s","data","setData","fetchData","response","get","error","console","_c","$RefreshReg$"],"sources":["/home/naex/Desktop/REACT PROJECTS/Quote Generator/src/source.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function Getdata() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://api.adviceslip.com/advice');\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array means this runs only once when the component mounts\n\n /*  const generateData = () => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://zenquotes.io/api/quotes');\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  };\n */\n \n  return (\n    <>\n    </>\n /*    <div className=\"app\">\n        <div className=\"card\">\n            <h1 className=\"heading\">{this.state.advice}</h1>\n            <button className=\"button\" onClick={this.fetchAdvice}>\n                <span>Give Me Advice</span>\n            </button>\n        </div>\n    </div> */\n)\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,mCAAmC,CAAC;QACrEH,OAAO,CAACE,QAAQ,CAACH,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAET;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE,oBACEL,OAAA,CAAAF,SAAA,mBACE;EACL;AACD;AACA;AACA;AACA;AACA;AACA;AACA,cAPC;AASD;AAACI,EAAA,CA1CuBD,OAAO;AAAAS,EAAA,GAAPT,OAAO;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
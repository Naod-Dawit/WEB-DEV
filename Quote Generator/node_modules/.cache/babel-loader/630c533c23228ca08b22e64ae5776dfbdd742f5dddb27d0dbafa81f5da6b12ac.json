{"ast":null,"code":"var _jsxFileName = \"/home/naex/Desktop/REACT PROJECTS/Quote Generator/src/source.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Getdata() {\n  _s();\n  const [data, setdata] = useState([]);\n  useEffect(() => {\n    const fetchdata = () => {\n      axios.get(`https://zenquotes.io/api/quotes`).then(res => setdata(res.data)).catch(err => {\n        throw new Error(`Error fetching data`, err);\n      });\n    };\n    fetchdata();\n    function generatedata() {\n      fetchdata();\n    }\n  }, generatedata);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map((quote, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: quote\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generatedata,\n          children: \"Generate Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_s(Getdata, \"qLEflTOmXrzTZJfh2c5W/ZOvfY8=\");\n_c = Getdata;\nvar _c;\n$RefreshReg$(_c, \"Getdata\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Getdata","_s","data","setdata","fetchdata","get","then","res","catch","err","Error","generatedata","children","map","quote","index","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/naex/Desktop/REACT PROJECTS/Quote Generator/src/source.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function Getdata() {\n  const [data, setdata] = useState([]);\n\n  useEffect(() => {\n    const fetchdata = () => {\n      axios\n        .get(`https://zenquotes.io/api/quotes`)\n        .then((res) => setdata(res.data))\n        .catch((err) => {\n          throw new Error(`Error fetching data`, err);\n        });\n    };\n    fetchdata();\n    function generatedata(){\n        fetchdata();\n\n    }\n\n  }, generatedata);\n  return(<>\n<div>\n    {data.map((quote,index)=>(\n\n        <div>\n<h1 key={index}>{quote}</h1>\n<button onClick={generatedata}>Generate Data</button>\n\n        </div>\n\n\n        \n    ))}\n    </div>  \n  </>)\n\n\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAGA,CAAA,KAAM;MACtBT,KAAK,CACFU,GAAG,CAAC,iCAAiC,CAAC,CACtCC,IAAI,CAAEC,GAAG,IAAKJ,OAAO,CAACI,GAAG,CAACL,IAAI,CAAC,CAAC,CAChCM,KAAK,CAAEC,GAAG,IAAK;QACd,MAAM,IAAIC,KAAK,CAAC,qBAAqB,EAAED,GAAG,CAAC;MAC7C,CAAC,CAAC;IACN,CAAC;IACDL,SAAS,CAAC,CAAC;IACX,SAASO,YAAYA,CAAA,EAAE;MACnBP,SAAS,CAAC,CAAC;IAEf;EAEF,CAAC,EAAEO,YAAY,CAAC;EAChB,oBAAOd,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACTf,OAAA;MAAAe,QAAA,EACKV,IAAI,CAACW,GAAG,CAAC,CAACC,KAAK,EAACC,KAAK,kBAElBlB,OAAA;QAAAe,QAAA,gBACRf,OAAA;UAAAe,QAAA,EAAiBE;QAAK,GAAbC,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAC5BtB,OAAA;UAAQuB,OAAO,EAAET,YAAa;UAAAC,QAAA,EAAC;QAAa;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAExC,CAIR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC,gBACN,CAAC;AAGL;AAAClB,EAAA,CApCuBD,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}